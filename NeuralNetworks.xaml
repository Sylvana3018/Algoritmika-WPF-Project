<Window x:Class="algoritm.NeuralNetworks"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        xmlns:local="clr-namespace:algoritm"
        mc:Ignorable="d"
        Title="Neural Networks"
        MinHeight="800" MinWidth="1400"
        MaxHeight="900" MaxWidth="1400"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        MouseDown="Window_MouseDown"
        ResizeMode="CanResizeWithGrip">
    <!-- Вставляем сюда тот же стиль и ресурсы, что и в Home.xaml -->
    <Window.Resources>
        <!-- Общие ресурсы анимации -->
        <Storyboard x:Key="MouseEnterAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.2"/>
            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="White" Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Key="MouseLeaveAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.2"/>
            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="MouseEnterColorAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                            To="#eae8eb" Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Key="MouseLeaveColorAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                            To="Transparent" Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Key="EditButtonHoverAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#161928" Duration="0:0:0.3"/>
            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.3"/>
        </Storyboard>
        <Storyboard x:Key="EditButtonUnhoverAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#fce9f2" Duration="0:0:0.3"/>
            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="#ca8595" Duration="0:0:0.3"/>
        </Storyboard>
        <!-- Styles for API Settings -->
        <Style x:Key="CustomSliderStyle" TargetType="Slider">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid>
                            <Rectangle x:Name="PART_TrackBackground" Height="4" VerticalAlignment="Center" Fill="#E0E0E0"/>
                            <Rectangle x:Name="PART_TrackFill" Height="4" VerticalAlignment="Center" Fill="#0066FF"/>
                            <Thumb x:Name="Thumb" Width="14" Height="14" Background="#0066FF" BorderBrush="White" BorderThickness="2" 
                                   Template="{DynamicResource {x:Static ToolBar.ButtonStyleKey}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Thumb" Property="Background" Value="#0052CC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#0066FF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#0066FF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!-- Styles for borders and cards -->
        <Style x:Key="SettingCardStyle" TargetType="Border">
            <Setter Property="Background" Value="#F8F8F8"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>
        <Style x:Key="EditButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#fce9f2"/>
            <Setter Property="Foreground" Value="#ca8595"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon x:Name="icon" Kind="Edit" Width="20" Height="20" Foreground="{TemplateBinding Foreground}" Margin="10,0,7,0"/>
                                <TextBlock x:Name="text" Text="Редактировать" FontWeight="DemiBold" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" FontSize="16"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource EditButtonHoverAnimation}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource EditButtonUnhoverAnimation}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" To="#2191ee" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#154AEE"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="10" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#1C232E" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#0066ff" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NavigationButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ellipse" Width="30" Height="30" Fill="Transparent" Stroke="Transparent" StrokeThickness="2"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#2496f5" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>
        <SolidColorBrush x:Key="UserMessageBackground" Color="#0B93F6"/>
        <!-- Blue color -->
        <SolidColorBrush x:Key="BotMessageBackground" Color="#E5E5EA"/>
        <!-- Light gray color -->
        <SolidColorBrush x:Key="UserMessageForeground" Color="White"/>
        <SolidColorBrush x:Key="BotMessageForeground" Color="Black"/>

        <!-- Styles for message bubbles -->
        <Style x:Key="UserMessageBubbleStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource UserMessageBackground}"/>
            <Setter Property="CornerRadius" Value="15,15,0,15"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,5,10,5"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>

        <Style x:Key="BotMessageBubbleStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource BotMessageBackground}"/>
            <Setter Property="CornerRadius" Value="15,15,15,0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="10,5,0,5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!-- ItemContainerStyle for ListBoxItems to enable animations -->
        <Style TargetType="ListBoxItem">
            <Setter Property="Opacity" Value="0"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="50"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="50" To="0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- Thinking animation -->
        <Storyboard x:Key="ThinkingAnimation" RepeatBehavior="Forever">
            <StringAnimationUsingKeyFrames Storyboard.TargetName="ThinkingTextBlock" Storyboard.TargetProperty="Text">
                <DiscreteStringKeyFrame KeyTime="0:0:0" Value="Thinking"/>
                <DiscreteStringKeyFrame KeyTime="0:0:0.5" Value="Thinking."/>
                <DiscreteStringKeyFrame KeyTime="0:0:1" Value="Thinking.."/>
                <DiscreteStringKeyFrame KeyTime="0:0:1.5" Value="Thinking..."/>
            </StringAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="RoundButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="#1C232E"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ellipse" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#1C232E" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="#1C232E" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" To="#1C232E" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ellipse" Fill="#FF6347" Width="30" Height="30" Stroke="Transparent" StrokeThickness="2"/>
                            <TextBlock x:Name="text" Text="X" Foreground="Transparent" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#1C232E" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="text" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="text" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ellipse" Property="Fill" Value="#FF4500"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
        </Style>

        <Style x:Key="MenuButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseEnterColorAnimation}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseLeaveColorAnimation}"/>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Storyboard x:Key="ExportButtonHoverAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#161928" Duration="0:0:0.3"/>
            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.3"/>
        </Storyboard>
        <Storyboard x:Key="ExportButtonUnhoverAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#edf1fb" Duration="0:0:0.3"/>
            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="#ca8595" Duration="0:0:0.3"/>
        </Storyboard>

        <Style x:Key="ExportButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#edf1fb"/>
            <Setter Property="Foreground" Value="#30323b"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Width" Value="114"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon x:Name="icon" Kind="FileExport" Width="20" Height="20" Foreground="{TemplateBinding Foreground}" Margin="10,0,10,0"/>
                                <TextBlock x:Name="text" Text="Экспорт" Foreground="{TemplateBinding Foreground}" FontWeight="DemiBold" VerticalAlignment="Center" FontSize="16"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ExportButtonHoverAnimation}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource ExportButtonUnhoverAnimation}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Стиль кнопки для иконок -->
        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseEnterAnimation}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseLeaveAnimation}"/>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="RectangleMouseEnterAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                        To="#161928" Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Key="RectangleMouseLeaveAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                        To="Transparent" Duration="0:0:0.2"/>
        </Storyboard>

    </Window.Resources>

    <!-- Основная панель с меню, подпиской и прочим -->
    <Border Background="#F8F6FC" CornerRadius="15" BorderBrush="#7F8C8D" BorderThickness="1">
        <Border.Effect>
            <DropShadowEffect Color="#D1E1E7" BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
        </Border.Effect>
        <Grid>
            <!-- Панель с меню и подпиской -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <!-- Левый блок с подпиской и меню -->
            <!-- Левый блок с меню и подпиской -->
            <Border Grid.Column="0" CornerRadius="15,0,0,15" Background="White" Grid.ColumnSpan="2" Margin="0,0,969,0">
                <Grid Margin="19,20,19,0" Width="182">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" VerticalAlignment="Top">
                        <!-- Логотип и кнопки навигации -->
                        <Image Source="al_logo.png" Width="212" Height="70" Margin="0,10,0,20"/>
                        <Button Style="{StaticResource MenuButtonStyle}" Opacity="1" Margin="-25,10,-23,0" Click="OpenHomeWindow">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                                <materialDesign:PackIcon Kind="Home" Width="22" Margin="25,3,0,0" Height="22" Foreground="#161928"/>
                                <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">
                                <Run Text="Главная панель"/>
                                </TextBlock>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource MenuButtonStyle}" Click="OpenStudentListWindow" Margin="-25,10,-23,0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                                <materialDesign:PackIcon Kind="Person" Margin="25,3,0,0" Width="22" Height="22" Foreground="#161928"/>
                                <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">Обучающиеся</TextBlock>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource MenuButtonStyle}" Click="OpenMaterialsWindow" Margin="-25,10,-23,0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                                <materialDesign:PackIcon Kind="Material" Margin="25,3,0,0" Width="22" Height="22" Foreground="#161928"/>
                                <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">Материалы</TextBlock>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource MenuButtonStyle}" Click="OpenVisitWindow" Margin="-25,10,-23,0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                                <materialDesign:PackIcon Kind="FileDocumentCheck" Margin="25,3,0,0" Width="22" Height="22" Foreground="#161928"/>
                                <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">Посещаемость</TextBlock>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource MenuButtonStyle}" Click="OpenNeuralNetworksWindow" Margin="-25,10,-23,0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                                <materialDesign:PackIcon Kind="Brain" Width="22" Margin="25,3,0,0" Height="22" Foreground="#161928"/>
                                <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">
                                <Run Text="Нейросети"/>
                                </TextBlock>
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <!-- Подписка -->
                    <StackPanel Grid.Row="1" VerticalAlignment="Bottom" Margin="0,0,0,40">
                        <TextBlock Text="Окончание подписки:" 
                            Foreground="#161928" 
                            FontWeight="DemiBold" 
                            FontSize="15" 
                            HorizontalAlignment="Center" 
                            Margin="0,0,0,5"/>
                        <Border CornerRadius="26" Width="180" Height="80">
                            <Border.Clip>
                                <RectangleGeometry Rect="0,0,180,80" RadiusX="10" RadiusY="10"/>
                            </Border.Clip>
                            <Grid ClipToBounds="True">
                                <MediaElement x:Name="SubscriptionBackgroundVideo" 
                                              Source="liquid3.mp4" 
                                              Stretch="UniformToFill" 
                                              LoadedBehavior="Manual" 
                                              UnloadedBehavior="Stop" 
                                              IsMuted="True" 
                                              MediaEnded="SubscriptionBackgroundVideo_MediaEnded"/>
                                <TextBlock x:Name="SubscriptionTimerTextBlock" 
                                           Text="{Binding SubscriptionTimeLeft}" 
                                           Foreground="White" 
                                           FontWeight="DemiBold"
                                           FontSize="18" 
                                           HorizontalAlignment="Center" 
                                           VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                </Grid>
            </Border>
            <Grid Grid.Column="1" Margin="129,10,118,10">
                <!-- Основная панель чата -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Chat messages -->
                    <Grid Grid.Row="0" Margin="10">
                        <ScrollViewer x:Name="ChatScrollViewer" VerticalScrollBarVisibility="Auto">
                            <ListBox x:Name="ChatMessagesPanel" Background="#F3F4F6" BorderThickness="0">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:Message}">
                                        <Border Style="{Binding BubbleStyle}">
                                            <StackPanel>
                                                <!-- Timestamp -->
                                                <TextBlock Text="{Binding Timestamp, StringFormat='{}{0:HH:mm}'}" FontSize="10" Foreground="Gray" HorizontalAlignment="{Binding TimestampAlignment}"/>
                                                <!-- Message parts -->
                                                <ItemsControl ItemsSource="{Binding Parts}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate DataType="{x:Type local:MessagePart}">
                                                            <ContentControl Content="{Binding}">
                                                                <ContentControl.Style>
                                                                    <Style TargetType="ContentControl">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="ContentControl">
                                                                                    <TextBlock Text="{Binding Text}" TextWrapping="Wrap" MaxWidth="500" Foreground="{Binding ForegroundColor}" FontSize="14"/>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsCode}" Value="True">
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="ContentControl">
                                                                                            <Border Background="#2D2D2D" Padding="5" CornerRadius="5" Margin="0,5,0,5">
                                                                                                <TextBox Text="{Binding Text}" 
                                                                                 TextWrapping="Wrap" 
                                                                                 Background="Transparent" 
                                                                                 Foreground="White" 
                                                                                 FontFamily="Consolas" 
                                                                                 IsReadOnly="True" 
                                                                                 BorderThickness="0" 
                                                                                 MaxWidth="500"/>
                                                                                            </Border>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </ContentControl.Style>
                                                            </ContentControl>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </ScrollViewer>

                        <!-- Thinking animation -->
                        <TextBlock x:Name="ThinkingTextBlock" Text="Thinking" FontSize="16" FontWeight="Bold" Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
                    </Grid>

                    <!-- Input field and send button -->
                    <Grid Grid.Row="1" Margin="10,10,10,20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Input field -->
                        <Border Background="White" BorderBrush="Gray" BorderThickness="1" CornerRadius="10" Grid.Column="0" Height="40" Margin="0,0,10,0">
                            <TextBox x:Name="ChatInputTextBox" Padding="10" FontSize="16" VerticalContentAlignment="Center" 
                             Background="Transparent" Foreground="Black" TextWrapping="Wrap" BorderThickness="0"/>
                        </Border>

                        <!-- Send button -->
                        <Button Grid.Column="1" Width="50" Height="50" Background="#0078D7" Foreground="White" FontSize="18" Content="⮞" 
                        Click="SendMessageButton_Click" Style="{StaticResource RoundButtonStyle}" />
                    </Grid>
                </Grid>
            </Grid>


            <!-- Кнопка закрытия -->
            <Border Grid.Column="1" CornerRadius="0,15,15,0" Background="White" Margin="980,0,0,0" Grid.ColumnSpan="2">
                <Grid>
                    <!-- Close button -->
                    <Button Style="{StaticResource CloseButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Click="CloseButton_Click"/>

                    <!-- API Settings -->
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="20,50,20,20">
                        <StackPanel>
                            <TextBlock Text="Настройки API" FontSize="24" FontWeight="Bold" Foreground="#262B40" Margin="0,0,0,20" />

                            <!-- Temperature Setting -->
                            <Border Style="{StaticResource SettingCardStyle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Температура" FontSize="16" FontWeight="Bold" Grid.Row="0" />
                                    <Grid Grid.Row="1" Margin="0,10,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Slider x:Name="TemperatureSlider" Minimum="0" Maximum="1" Value="0.7" Style="{StaticResource CustomSliderStyle}" Grid.Column="0"/>
                                        <TextBlock Text="{Binding ElementName=TemperatureSlider, Path=Value, StringFormat=F1}" FontSize="14" Foreground="Gray" HorizontalAlignment="Right" Margin="10,0,0,0" Grid.Column="1"/>
                                    </Grid>
                                </Grid>
                            </Border>

                            <!-- Max Tokens Setting -->
                            <Border Style="{StaticResource SettingCardStyle}">
                                <StackPanel>
                                    <TextBlock Text="Максимальное количество токенов" FontSize="16" FontWeight="Bold" Margin="0,0,0,5" />
                                    <TextBox x:Name="MaxTokensTextBox" Text="4096" FontSize="14" Style="{StaticResource CustomTextBoxStyle}" />
                                </StackPanel>
                            </Border>

                            <!-- Top P Setting -->
                            <Border Style="{StaticResource SettingCardStyle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Top P" FontSize="16" FontWeight="Bold" Grid.Row="0" />
                                    <Grid Grid.Row="1" Margin="0,10,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Slider x:Name="TopPSlider" Minimum="0" Maximum="1" Value="1" Style="{StaticResource CustomSliderStyle}" Grid.Column="0"/>
                                        <TextBlock Text="{Binding ElementName=TopPSlider, Path=Value, StringFormat=F1}" FontSize="14" Foreground="Gray" HorizontalAlignment="Right" Margin="10,0,0,0" Grid.Column="1"/>
                                    </Grid>
                                </Grid>
                            </Border>

                            <!-- Frequency Penalty Setting -->
                            <Border Style="{StaticResource SettingCardStyle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Частота повторения" FontSize="16" FontWeight="Bold" Grid.Row="0" />
                                    <Grid Grid.Row="1" Margin="0,10,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Slider x:Name="FrequencyPenaltySlider" Minimum="-2" Maximum="2" Value="0" Style="{StaticResource CustomSliderStyle}" Grid.Column="0"/>
                                        <TextBlock Text="{Binding ElementName=FrequencyPenaltySlider, Path=Value, StringFormat=F1}" FontSize="14" Foreground="Gray" HorizontalAlignment="Right" Margin="10,0,0,0" Grid.Column="1"/>
                                    </Grid>
                                </Grid>
                            </Border>

                            <!-- Presence Penalty Setting -->
                            <Border Style="{StaticResource SettingCardStyle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Награда за разнообразие" FontSize="16" FontWeight="Bold" Grid.Row="0" />
                                    <Grid Grid.Row="1" Margin="0,10,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Slider x:Name="PresencePenaltySlider" Minimum="-2" Maximum="2" Value="0" Style="{StaticResource CustomSliderStyle}" Grid.Column="0"/>
                                        <TextBlock Text="{Binding ElementName=PresencePenaltySlider, Path=Value, StringFormat=F1}" FontSize="14" Foreground="Gray" HorizontalAlignment="Right" Margin="10,0,0,0" Grid.Column="1"/>
                                    </Grid>
                                </Grid>
                            </Border>

                            <!-- Model Selection -->
                            <Border Style="{StaticResource SettingCardStyle}">
                                <StackPanel>
                                    <TextBlock Text="Модель" FontSize="16" FontWeight="Bold" Margin="0,0,0,5" />
                                    <ComboBox x:Name="ModelComboBox" SelectedIndex="0" Style="{StaticResource CustomComboBoxStyle}">
                                        <!-- GPT-3.5 Variants -->
                                        <ComboBoxItem Content="gpt-3.5-turbo" />
                                        <ComboBoxItem Content="gpt-3.5-turbo-instruct" />
                                        <ComboBoxItem Content="gpt-3.5-turbo-16k" />
                                        <!-- GPT-4 Variants -->
                                        <ComboBoxItem Content="gpt-4" />
                                        <ComboBoxItem Content="gpt-4-32k" />
                                        <ComboBoxItem Content="gpt-4-turbo" />
                                        <!-- GPT-4o Variants -->
                                        <ComboBoxItem Content="gpt-4o" />
                                        <ComboBoxItem Content="gpt-4o-32k" />
                                    </ComboBox>
                                </StackPanel>
                            </Border>

                            <!-- Save Button -->
                            <Button Content="Сохранить" Width="200" Height="40" Margin="0,20,0,0" Style="{StaticResource RoundedButtonStyle}" Click="SaveSettings_Click" />
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>
