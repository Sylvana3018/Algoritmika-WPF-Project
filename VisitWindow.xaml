<Window x:Class="algoritm.VisitWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:LiveCharts="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        xmlns:local="clr-namespace:algoritm"
        mc:Ignorable="d"
        Title="Visit"
        MinHeight="800" MinWidth="1400"
        MaxHeight="900" MaxWidth="1400"
        d:DesignHeight="800" d:DesignWidth="1300"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        MouseDown="Window_MouseDown"
        ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Gray"/>

        <!-- Animations for entry zoom and border thickness -->
        <Storyboard x:Key="MouseEnterAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:0.2"/>
            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="3" Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Key="MouseLeaveAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.2"/>
            <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" To="1" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="MouseEnterColorAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                            To="#eae8eb" Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Key="MouseLeaveColorAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                            To="Transparent" Duration="0:0:0.2"/>
        </Storyboard>

        <!-- Button Styles -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ellipse" Fill="#FF6347" Width="30" Height="30" Stroke="Transparent" StrokeThickness="2"/>
                            <TextBlock x:Name="text" Text="X" Foreground="Transparent" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="#1C232E" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="text" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="text" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ellipse" Property="Fill" Value="#FF4500"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
        </Style>

        <Style x:Key="MenuButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="50"/>
            <!-- Set fixed height for buttons -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseEnterColorAnimation}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseLeaveColorAnimation}"/>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PaginationButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ellipse" Width="30" Height="30" Fill="Transparent" Stroke="Transparent" StrokeThickness="2"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#2496f5" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>


        <!-- Custom ComboBox Style -->
        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border x:Name="Border"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="2"
                                CornerRadius="10">
                                <DockPanel Margin="10,0">
                                    <ContentPresenter x:Name="ContentSite"
                                                  IsHitTestVisible="False"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  Margin="5,3,23,3"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"/>
                                    <ToggleButton x:Name="ToggleButton"
                                              DockPanel.Dock="Right"
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"
                                              Background="Transparent"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="0">
                                        <Path x:Name="Arrow"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 0 0 L 4 4 L 8 0 Z"
                                          Fill="Black"/>
                                    </ToggleButton>
                                </DockPanel>
                            </Border>
                            <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  HorizontalAlignment="Center">
                                    <Border x:Name="DropDownBorder"
                                        Background="White"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="2"
                                        CornerRadius="0,0,10,10"/>
                                    <ScrollViewer Margin="4,6,4,6"
                                              SnapsToDevicePixels="True">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#7F8C8D"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <!-- Custom ComboBoxItem Style -->
        <Style x:Key="CustomComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border"
                            Background="White"
                            BorderBrush="#7F8C8D"
                            BorderThickness="1"
                            CornerRadius="10"
                            Margin="2"
                            Padding="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#E0E0E0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Edit Button Hover Animation -->
        <Storyboard x:Key="EditButtonHoverAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#161928" Duration="0:0:0.3"/>
            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="White" Duration="0:0:0.3"/>
        </Storyboard>
        <Storyboard x:Key="EditButtonUnhoverAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#fce9f2" Duration="0:0:0.3"/>
            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="#ca8595" Duration="0:0:0.3"/>
        </Storyboard>

        <!-- Edit Button Press Animation -->
        <Style x:Key="EditButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#fce9f2"/>
            <Setter Property="Foreground" Value="#ca8595"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Width" Value="130"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon x:Name="icon" Kind="ContentSave" Width="20" Height="20" Foreground="{TemplateBinding Foreground}" Margin="10,0,7,0"/>
                                <TextBlock x:Name="text" Text="Сохранить" FontWeight="DemiBold" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" FontSize="16"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource EditButtonHoverAnimation}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource EditButtonUnhoverAnimation}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" To="#2191ee" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExportButton" TargetType="Button">
            <Setter Property="Background" Value="#fce9f2"/>
            <Setter Property="Foreground" Value="#ca8595"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Width" Value="165"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <materialDesign:PackIcon x:Name="icon" Kind="ContentSave" Width="20" Height="20" Foreground="{TemplateBinding Foreground}" Margin="10,0,7,0"/>
                                <TextBlock x:Name="text" Text="Экспорт отчёта" FontWeight="DemiBold" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" FontSize="16"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource EditButtonHoverAnimation}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource EditButtonUnhoverAnimation}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" To="#2191ee" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NavigationButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="ellipse" Width="30" Height="30" Fill="Transparent" Stroke="Transparent" StrokeThickness="2"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#2496f5" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>
        <Style TargetType="Border" x:Key="MaterialBlockStyle">
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
                                            To="4"
                                            Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
                                            To="2"
                                            Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Border Background="#F8F6FC" CornerRadius="15" BorderBrush="#7F8C8D" BorderThickness="1">
        <Border.Effect>
            <DropShadowEffect Color="#D1E1E7" BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
        </Border.Effect>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>

            <!-- Left Menu -->
            <Border Grid.Column="0" CornerRadius="15,0,0,15" Background="White" Grid.ColumnSpan="2" Margin="0,0,969,0">
                <StackPanel VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="19,20,19,0" Width="182">
                    <Image Source="al_logo.png" Width="212" Height="70" Margin="0,10,0,20"/>

                    <!-- Кнопки навигации -->
                    <Button Style="{StaticResource MenuButtonStyle}" Opacity="1" Margin="-25,10,-23,0" Click="OpenHomeWindow">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                            <materialDesign:PackIcon Kind="Home" Width="22" Margin="25,3,0,0" Height="22" Foreground="#161928"/>
                            <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">
                                <Run Text="Главная панель"/>
                            </TextBlock>
                        </StackPanel>
                    </Button>

                    <Button Style="{StaticResource MenuButtonStyle}" Click="OpenStudentListWindow" Margin="-25,10,-23,0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                            <materialDesign:PackIcon Kind="Person" Margin="25,3,0,0" Width="22" Height="22" Foreground="#161928"/>
                            <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">Обучающиеся</TextBlock>
                        </StackPanel>
                    </Button>

                    <Button Style="{StaticResource MenuButtonStyle}" Click="OpenMaterialsWindow" Margin="-25,10,-23,0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                            <materialDesign:PackIcon Kind="Material" Margin="25,3,0,0" Width="22" Height="22" Foreground="#161928"/>
                            <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">Материалы</TextBlock>
                        </StackPanel>
                    </Button>

                    <Button Style="{StaticResource MenuButtonStyle}" Margin="-25,10,-23,0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                            <materialDesign:PackIcon Kind="FileDocumentCheck" Margin="25,3,0,0" Width="22" Height="22" Foreground="#161928"/>
                            <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">Посещаемость</TextBlock>
                        </StackPanel>
                    </Button>

                    <Button Style="{StaticResource MenuButtonStyle}" Click="OpenNeuralNetworksWindow" Margin="-25,10,-23,0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Height="28">
                            <materialDesign:PackIcon Kind="Brain" Width="22" Margin="25,3,0,0" Height="22" Foreground="#161928"/>
                            <TextBlock VerticalAlignment="Center" Margin="20,0,0,0" Foreground="#161928" FontWeight="DemiBold" FontSize="16">
                                <Run Text="Нейросети"/>
                            </TextBlock>
                        </StackPanel>
                    </Button>

                </StackPanel>
            </Border>



            <!-- Right Content -->
            <Border Grid.Column="1" CornerRadius="0,15,15,0" Background="White" Margin="980,0,0,0" Grid.ColumnSpan="2">
                <Grid>
                    <Button Style="{StaticResource CloseButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Click="CloseButton_Click"/>

                    <!-- Контент правой панели -->
                    <StackPanel VerticalAlignment="Top" HorizontalAlignment="Center" Margin="10,20,10,10">
                        <!-- Метка "Студент" -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,0,0,10">
                            <TextBlock Text="Студент" FontWeight="Bold" FontSize="16" Foreground="#161928" Margin="0,0,0,10"/>
                        </StackPanel>

                        <!-- Аватар студента -->
                        <Ellipse Width="200" Height="200" Margin="0,0,0,20">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="people.png"/>
                            </Ellipse.Fill>
                        </Ellipse>

                        <!-- Имя студента -->
                        <TextBlock Text="{Binding SelectedRecord.StudentName}" FontWeight="Bold" FontSize="20" Foreground="#161928" HorizontalAlignment="Center" TextWrapping="Wrap" ToolTip="{Binding SelectedRecord.StudentName}"/>

                        <!-- Название урока и дата -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,10,10,0">
                            <TextBlock Text="{Binding SelectedRecord.LessonName}" FontSize="16" Foreground="#161928" Margin="0,0,20,0" TextWrapping="Wrap" ToolTip="{Binding SelectedRecord.LessonName}"/>
                            <TextBlock Text="{Binding SelectedRecord.LessonDate, StringFormat='Дата: {0:dd.MM.yyyy}'}" FontSize="16" Foreground="#161928" TextWrapping="Wrap" ToolTip="{Binding SelectedRecord.LessonDate}"/>
                        </StackPanel>

                        <!-- Выпадающий список статусов -->
                        <ComboBox Style="{StaticResource CustomComboBoxStyle}" ItemContainerStyle="{StaticResource CustomComboBoxItemStyle}" ItemsSource="{Binding Statuses}" SelectedItem="{Binding SelectedStatus}" DisplayMemberPath="Name" Margin="10,10,10,0"/>

                        <!-- Кнопка сохранения -->
                        <Button Style="{StaticResource EditButtonStyle}" Content="Сохранить" Click="SaveButton_Click" Margin="10,20,10,0"/>

                        <Border CornerRadius="25" Margin="23,227,23,524" Padding="20">
                            <Border.Background>
                                <ImageBrush ImageSource="5528488-01_blur.jpg" Stretch="UniformToFill"/>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="200"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0">

                                </StackPanel>
                                <Image Grid.Column="1" Source="Images/64ba0ab.png" Width="211" 
               HorizontalAlignment="Right" 
               Margin="0,-86,-11,30"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                </Grid>
            </Border>



            <Grid Grid.Column="1" Margin="20,20,20,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="180,0,0,20">
                    <TextBlock Text="Посещаемость" FontWeight="Bold" FontSize="20" Foreground="#161928"/>
                    <Button Style="{StaticResource ExportButton}" Content="Выгрузить отчет в PDF" Click="ExportButton_Click" Margin="10,0,10,0"/>

                </StackPanel>

                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" Margin="170,70,170,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Style="{StaticResource NavigationButtonStyle}" Content="&#x276E;" Click="PrevPage_Click"/>
                        <ItemsControl Grid.Column="1" ItemsSource="{Binding DisplayedAttendanceRecords}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="10">
                                        <Border Style="{StaticResource MaterialBlockStyle}" Background="White" BorderBrush="{Binding StatusColor}" Height="80" CornerRadius="10" MouseDown="Record_Click">
                                            <Grid Margin="10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="0">
                                                    <materialDesign:PackIcon Kind="AccountCircle" Width="40" Height="40" Margin="0,0,10,0" Foreground="{Binding StatusColor}"/>
                                                    <StackPanel Orientation="Vertical">
                                                        <TextBlock Text="{Binding StudentName}" FontWeight="Bold" FontSize="14"/>
                                                        <TextBlock Text="{Binding LessonName}" FontSize="12"/>
                                                        <TextBlock Text="{Binding AttendanceStatus}" FontSize="12"/>
                                                    </StackPanel>
                                                </StackPanel>
                                                <TextBlock Grid.Column="2" Text="{Binding LessonDate, StringFormat='Дата: {0:dd.MM.yyyy}'}" FontSize="12" Foreground="#161928" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Button Grid.Column="2" Style="{StaticResource NavigationButtonStyle}" Content="&#x276F;" Click="NextPage_Click"/>
                    </Grid>
                </StackPanel>

                <!-- График посещаемости -->
                <StackPanel Grid.Row="2" Margin="170,20,170,20" VerticalAlignment="Stretch">
                    <TextBlock Text="Посещаемость по датам" FontWeight="Bold" FontSize="20" Foreground="#161928" Margin="0,0,0,10"/>
                    <LiveCharts:CartesianChart Series="{Binding AttendanceSeries}" LegendLocation="Right" Height="300">
                        <LiveCharts:CartesianChart.AxisX>
                            <LiveCharts:Axis Title="Дата" Labels="{Binding Dates}">
                                <LiveCharts:Axis.LabelsRotation>15</LiveCharts:Axis.LabelsRotation>
                            </LiveCharts:Axis>
                        </LiveCharts:CartesianChart.AxisX>
                        <LiveCharts:CartesianChart.AxisY>
                            <LiveCharts:Axis Title="Процент посещаемости" LabelFormatter="{Binding YFormatter}"/>
                        </LiveCharts:CartesianChart.AxisY>
                    </LiveCharts:CartesianChart>
                </StackPanel>

            </Grid>

        </Grid>
    </Border>
</Window>